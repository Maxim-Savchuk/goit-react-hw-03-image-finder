{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","service/ApiService.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SearchbarContainer","styled","header","SearchForm","form","SearchFormBtn","button","SearchFormBtnLabel","span","SearchFormInput","input","Searchbar","state","imageName","handleNameChange","evt","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","onSubmit","props","trim","toast","error","this","type","autocomplete","autoFocus","placeholder","onChange","Component","GalleryItem","li","GalleryItemImage","img","ImageGalleryItem","webformatURL","tag","onSelect","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","id","largeImageURL","tags","LoaderContainer","div","LoaderSpinner","color","height","width","timeout","Button","LoadMoreButton","title","propTypes","PropTypes","func","string","Overlay","ModalEl","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","PureComponent","fetchImages","page","a","url","fetch","then","response","ok","json","Promise","reject","Error","result","Container","App","isLoading","selectedImage","selectedImageName","fetchSearchingImages","undefined","data","hits","length","prevState","catch","console","log","message","finally","handleScroll","handleFormSubmit","scrollTo","top","body","scrollHeight","behavior","handleLoadMoreBtnClick","handleSelectedImage","imageUrl","handleCloseModal","prevProps","prevImageName","prevPage","showBtn","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82e215ef.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const SearchbarContainer = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormBtn = styled.button`\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const SearchFormBtnLabel = styled.span`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    &::placeholder {\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    SearchbarContainer,\r\n    SearchForm,\r\n    SearchFormBtn,\r\n    SearchFormBtnLabel,\r\n    SearchFormInput\r\n} from \"./Searchbar.styled\";\r\n\r\nexport class Searchbar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n        imageName: '',\r\n    }\r\n\r\n    handleNameChange = evt => {\r\n        this.setState({ imageName: evt.currentTarget.value.toLowerCase() })\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        const { onSubmit } = this.props;\r\n        const { imageName } = this.state;\r\n\r\n        if (imageName.trim() === '') {\r\n            toast.error('Please enter the image name.')\r\n            return;\r\n        }\r\n\r\n        onSubmit(imageName);\r\n\r\n        this.setState({ imageName: '' })\r\n    }\r\n\r\n    render() {\r\n        const { imageName } = this.state;\r\n\r\n        return (\r\n            <SearchbarContainer>\r\n                <SearchForm onSubmit={this.handleSubmit}>\r\n                    <SearchFormBtn type=\"submit\">\r\n                        <SearchFormBtnLabel>Search</SearchFormBtnLabel>\r\n                    </SearchFormBtn>\r\n\r\n                    <SearchFormInput\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        autoFocus\r\n                        value={imageName}\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleNameChange}\r\n                    />\r\n                </SearchForm>\r\n            </SearchbarContainer>\r\n        )\r\n    }\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const GalleryItem = styled.li`\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const GalleryItemImage = styled.img`\r\n    width: 100%; \r\n    height: 260px; \r\n    object-fit: cover; \r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    &:hover {\r\n        transform: scale(1.03);\r\n        cursor: zoom-in;\r\n    }\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { GalleryItem, GalleryItemImage } from \"./ImageGalleryItem.styled\"\r\n\r\nexport const ImageGalleryItem = ({ webformatURL, tag, onSelect }) => {\r\n    return (\r\n        <GalleryItem >\r\n            <GalleryItemImage src={webformatURL} alt={tag} onClick={onSelect} />\r\n        </GalleryItem>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    onSelect: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from \"components/ImageGalleryItem\";\r\n\r\nimport { ImageGalleryList } from \"./ImageGallery.styled\";\r\n\r\nexport const ImageGallery = ({ images, onSelect }) => {\r\n    return (\r\n        <ImageGalleryList>\r\n            {images &&\r\n                images.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n                    const selectImage = () => onSelect(largeImageURL, tags);\r\n                    return (\r\n                        <ImageGalleryItem\r\n                            key={id}\r\n                            webformatURL={webformatURL}\r\n                            alt={tags}\r\n                            onSelect={selectImage}\r\n                        />\r\n                    )\r\n                })}\r\n        </ImageGalleryList>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    onSelect: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  margin: 0 auto;\r\n`;","import Loader from \"react-loader-spinner\";\r\n\r\nimport { LoaderContainer } from \"./Loader.styled\";\r\n\r\nexport const LoaderSpinner = () => {\r\n    return (\r\n        <LoaderContainer>\r\n            <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#3F51B5\"\r\n                height={80}\r\n                width={80}\r\n                timeout={3000}\r\n            />\r\n        </LoaderContainer>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    width: 180px;\r\n    margin: 0 auto;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    &:hover,\r\n    &:focus {\r\n      background-color: #303f9f;\r\n    }\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { Button } from \"./Button.styled\"\r\n\r\nexport const LoadMoreButton = ({ onClick, title }) => {\r\n    return (\r\n        <Button type=\"button\" onClick={onClick}>\r\n            {title}\r\n        </Button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    title: PropTypes.string,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n`;\r\n\r\nexport const ModalEl = styled.div`\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n`;","import PropTypes from 'prop-types';\r\nimport { PureComponent } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { Overlay, ModalEl } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport class Modal extends PureComponent {\r\n    static propTypes = {\r\n        src: PropTypes.string,\r\n        alt: PropTypes.string,\r\n        onClose: PropTypes.func,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = evt => {\r\n        if (evt.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    handleBackdropClick = evt => {\r\n        if (evt.currentTarget === evt.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <Overlay onClick={this.handleBackdropClick}>\r\n                <ModalEl>\r\n                    <img src={src} alt={alt} />\r\n                </ModalEl>\r\n            </Overlay>,\r\n            modalRoot\r\n        )\r\n    }\r\n}","export const fetchImages = async (imageName, page) => {\r\n    const API_KEY = '22714913-606cac6e21aef876ccb1111b2';\r\n    const BASE_URL = 'https://pixabay.com/api/';\r\n    const url = `${BASE_URL}?q=${imageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    const result = await fetch(url).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n\r\n        return Promise.reject(new Error('Error'));\r\n    })\r\n\r\n    return result;\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 16px;\r\n    padding-bottom: 24px;\r\n`;","import { Component } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Searchbar } from \"components/Searchbar\";\nimport { ImageGallery } from \"components/ImageGallery\";\nimport { LoaderSpinner } from \"components/Loader\";\nimport { LoadMoreButton } from \"components/Button\";\nimport { Modal } from \"components/Modal\";\n\nimport { fetchImages } from \"service/ApiService\";\n\nimport { Container } from \"./App.styled\";\n\nexport class App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    page: 1,\n    isLoading: false,\n    selectedImage: '',\n    selectedImageName: '',\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevImageName = prevState.imageName;\n    const prevPage = prevState.page;\n    const { imageName, page } = this.state;\n\n    if (prevImageName !== imageName || prevPage !== page) {\n      this.fetchSearchingImages();\n    }\n  }\n\n  fetchSearchingImages = () => {\n    const { imageName, page } = this.state;\n\n    if (imageName !== undefined) {\n      this.setState({ isLoading: true });\n\n      fetchImages(imageName, page)\n        .then(data => {\n          if (data.hits.length === 0) {\n            toast.error('Ooops, no images found.');\n            return;\n          }\n          this.setState(prevState =>\n            ({ images: [...prevState.images, ...data.hits] })\n          )\n        })\n        .catch(error => console.log(error.message))\n        .finally(() => {\n          this.setState({ isLoading: false });\n          this.handleScroll();\n        });\n    }\n  }\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName, images: [], page: 1 });\n  }\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  handleLoadMoreBtnClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }))\n  }\n\n  handleSelectedImage = (imageUrl, alt) => {\n    this.setState({ selectedImage: imageUrl, selectedImageName: alt });\n  }\n\n  handleCloseModal = () => {\n    this.setState({ selectedImage: '', selectedImageName: '' });\n  }\n\n  render() {\n    const { images, isLoading, selectedImage, selectedImageName } = this.state;\n    const showBtn = images.length > 0;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        {isLoading &&\n          <LoaderSpinner />\n        }\n        <ImageGallery images={images} onSelect={this.handleSelectedImage} />\n        {selectedImage &&\n          <Modal src={selectedImage} alt={selectedImageName} onClose={this.handleCloseModal} />\n        }\n        {showBtn &&\n          <LoadMoreButton title=\"Load more\" onClick={this.handleLoadMoreBtnClick} />\n        }\n\n        <ToastContainer autoClose={3000} />\n      </Container>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}